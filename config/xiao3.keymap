/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        RelativeParent: RelativeParent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
            label = "RELATIVEPARENT";
        };
    };

    behaviors {
        EscCaps: EscCaps {
            compatible = "zmk,behavior-tap-dance";
            label = "ESCCAPS";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&caps_word>;
        };

        SpaceUnderscore: SpaceUnderscore {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACEUNDERSCORE";
            #binding-cells = <0>;
            bindings = <&kp UNDER>, <&kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alpha {
            bindings = <
&kp TAB   &kp N1  &kp N2  &kp N3                     &kp N4       &kp N5          &kp N6         &kp N7         &kp N8                  &kp N9      &kp N0     &trans
&EscCaps  &kp X   &kp L   &kp D                      &kp P        &kp V           &kp Z          &kp K          &kp O                   &kp U       &kp MINUS  &trans
&trans    &kp N   &kp R   &kp T                      &kp S        &kp G           &kp Y          &kp H          &kp E                   &kp I       &kp A      &trans
&trans    &kp Q   &kp J   &kp M                      &kp C        &kp W           &kp B          &kp F          &kp COMMA               &kp PERIOD  &trans     &trans
                          &mt LEFT_SHIFT UNDERSCORE  &kp SPACE    &kp LEFT_ALT    &kp RIGHT_ALT  &kp RET        &mt RIGHT_SHIFT DOLLAR
                          &kp LCTRL                  &key_repeat  &kp LEFT_GUI    &mo 1          &kp BACKSPACE  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Symbols {
            bindings = <
&kp F1  &kp F2            &kp F3         &kp F4            &kp F5             &kp F6             &kp F7         &kp F8      &kp F9                &kp F10                &kp F11       &kp F12
&trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp PERIOD         &kp AMPERSAND  &kp HASH    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &trans
&trans  &kp EXCLAMATION   &kp MINUS      &kp PLUS          &kp EQUAL          &kp UNDERSCORE     &kp PIPE       &kp COLON   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&trans  &kp CARET         &kp SLASH      &kp ASTERISK      &kp BACKSLASH      &RelativeParent    &kp TILDE      &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN   &trans
                                         &trans            &trans             &trans             &trans         &trans      &trans
                                         &trans            &trans             &trans             &trans         &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Utility {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
                                        &trans        &trans        &sys_reset      &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Caps {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &SpaceUnderscore  &trans    &trans  &trans  &trans
                        &trans  &trans            &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        CapsOn {
            if-layers = <3>;
            then-layer = <3>;
        };
    };
};
